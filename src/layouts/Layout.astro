---
import Navigation from "../components/Navigation.astro";
import "@fontsource-variable/dm-sans";
interface Props {
  title: string;
  page: string;
}

const { title, page } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <Navigation page={page} />
    <div class="pb-32">
      <slot />
    </div>
  </body>
</html>
<script is:inline src="https://unpkg.com/@phosphor-icons/web@2.0.3"></script>

<style is:global>
  :root {
    --grid-unit: 1rem;
    --border-radius-base: 0.5rem;
  }

  [data-theme="light"] {
    --primary: #ffffff;
    --secondary: #080808;
    --tertiary: #f6f6f6;
    --blur: rgba(234, 234, 234, 0.7);
  }

  [data-theme="dark"] {
    --primary: #0b0b0b;
    --secondary: #f5eeee;
    --tertiary: #101010;
    --blur: rgba(34, 34, 34, 0.703);
  }

  body {
    background-color: var(--primary);
    color: var(--secondary);
  }
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  html {
    font-family: "DM Sans Variable" !important;
    letter-spacing: -0.5px;
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }

  section {
    max-width: 620px;
    margin: 0 auto;
    padding: 0 16px;
  }
</style>

<script is:inline>
  function calculateSettingAsThemeString({
    localStorageTheme,
    systemSettingDark,
  }) {
    if (localStorageTheme !== null) {
      return localStorageTheme;
    }

    if (systemSettingDark.matches) {
      return "dark";
    }

    return "light";
  }

  function updateButton({ buttonEl, isDark }) {
    // Change props
  }

  function updateThemeOnHtmlEl({ theme }) {
    document.querySelector("html").setAttribute("data-theme", theme);
  }

  const button = document.querySelector("[data-theme-toggle]");
  const localStorageTheme = localStorage.getItem("theme");
  const systemSettingDark = window.matchMedia("(prefers-color-scheme: dark)");

  let currentThemeSetting = calculateSettingAsThemeString({
    localStorageTheme,
    systemSettingDark,
  });

  updateButton({ buttonEl: button, isDark: currentThemeSetting === "dark" });
  updateThemeOnHtmlEl({ theme: currentThemeSetting });

  button.addEventListener("click", (_event) => {
    const newTheme = currentThemeSetting === "dark" ? "light" : "dark";

    localStorage.setItem("theme", newTheme);
    updateButton({ buttonEl: button, isDark: newTheme === "dark" });
    updateThemeOnHtmlEl({ theme: newTheme });

    currentThemeSetting = newTheme;
  });

  const selectTheme = (theme) => {
    updateThemeOnHtmlEl({ theme: theme });
  };
</script>

<script
  is:inline
  src="https://unpkg.com/@studio-freight/lenis@1.0.37/dist/lenis.min.js"
></script>

<script
  is:inline
  src="https://cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/5.0.0/imagesloaded.pkgd.min.js"
  integrity="sha512-kfs3Dt9u9YcOiIt4rNcPUzdyNNO9sVGQPiZsub7ywg6lRW5KuK1m145ImrFHe3LMWXHndoKo2YRXWy8rnOcSKg=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"></script>

<script
  is:inline
  src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"></script>

<script
  is:inline
  src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/ScrollTrigger.min.js"
></script>

<script is:inline>
  const lenis = new Lenis();

  lenis.on("scroll", (e) => {});

  function raf(time) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }

  requestAnimationFrame(raf);
</script>
